#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file '../../soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'KBandIP_onchip_mem_FPGA_Slave', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'FPGA_Slave_mm_bridge'.
 * The macros are prefixed with 'FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_TYPE altera_avalon_onchip_memory2
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_NAME KBandIP_onchip_mem_FPGA_Slave
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_BASE 0x0
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SPAN 262144
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_END 0x3ffff
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_CONTENTS_INFO ""
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_DUAL_PORT 0
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_GUI_RAM_BLOCK_TYPE AUTO
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_FPGA_Slave
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_MEM_CONTENT 1
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INSTANCE_ID NONE
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_NON_DEFAULT_INIT_FILE_ENABLED 0
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_RAM_BLOCK_TYPE AUTO
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_READ_DURING_WRITE_MODE DONT_CARE
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SINGLE_CLOCK_OP 0
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_MULTIPLE 1
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_VALUE 262144
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_WRITABLE 1
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_DAT_SYM 1
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_HEX 1
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HAS_BYTE_LANE 0
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define FPGA_SLAVE_MM_BRIDGE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_FPGA_Slave

/*
 * Macros for device 'fft_ddr_bridge', class 'altera_address_span_extender'
 * Path to the device is from the master group 'KBandIP'.
 * The macros are prefixed with 'KBANDIP_FFT_DDR_BRIDGE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_FFT_DDR_BRIDGE_COMPONENT_TYPE altera_address_span_extender
#define KBANDIP_FFT_DDR_BRIDGE_COMPONENT_NAME fft_ddr_bridge
#define KBANDIP_FFT_DDR_BRIDGE_BASE 0x0
#define KBANDIP_FFT_DDR_BRIDGE_SPAN 1073741824
#define KBANDIP_FFT_DDR_BRIDGE_END 0x3fffffff
#define KBANDIP_FFT_DDR_BRIDGE_BURSTCOUNT_WIDTH 5
#define KBANDIP_FFT_DDR_BRIDGE_BYTEENABLE_WIDTH 16
#define KBANDIP_FFT_DDR_BRIDGE_CNTL_ADDRESS_WIDTH 1
#define KBANDIP_FFT_DDR_BRIDGE_DATA_WIDTH 128
#define KBANDIP_FFT_DDR_BRIDGE_MASTER_ADDRESS_WIDTH 32
#define KBANDIP_FFT_DDR_BRIDGE_MAX_BURST_BYTES 256
#define KBANDIP_FFT_DDR_BRIDGE_MAX_BURST_WORDS 16
#define KBANDIP_FFT_DDR_BRIDGE_SLAVE_ADDRESS_SHIFT 4
#define KBANDIP_FFT_DDR_BRIDGE_SLAVE_ADDRESS_WIDTH 26
#define KBANDIP_FFT_DDR_BRIDGE_SUB_WINDOW_COUNT 1

/*
 * Macros for device 'fft_ddr_bridge', class 'altera_address_span_extender'
 * Path to the device is from the master group 'KBandIP_DDR'.
 * The macros are prefixed with 'KBANDIP_DDR_FFT_DDR_BRIDGE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_DDR_FFT_DDR_BRIDGE_COMPONENT_TYPE altera_address_span_extender
#define KBANDIP_DDR_FFT_DDR_BRIDGE_COMPONENT_NAME fft_ddr_bridge
#define KBANDIP_DDR_FFT_DDR_BRIDGE_BASE 0x0
#define KBANDIP_DDR_FFT_DDR_BRIDGE_SPAN 1073741824
#define KBANDIP_DDR_FFT_DDR_BRIDGE_END 0x3fffffff
#define KBANDIP_DDR_FFT_DDR_BRIDGE_BURSTCOUNT_WIDTH 5
#define KBANDIP_DDR_FFT_DDR_BRIDGE_BYTEENABLE_WIDTH 16
#define KBANDIP_DDR_FFT_DDR_BRIDGE_CNTL_ADDRESS_WIDTH 1
#define KBANDIP_DDR_FFT_DDR_BRIDGE_DATA_WIDTH 128
#define KBANDIP_DDR_FFT_DDR_BRIDGE_MASTER_ADDRESS_WIDTH 32
#define KBANDIP_DDR_FFT_DDR_BRIDGE_MAX_BURST_BYTES 256
#define KBANDIP_DDR_FFT_DDR_BRIDGE_MAX_BURST_WORDS 16
#define KBANDIP_DDR_FFT_DDR_BRIDGE_SLAVE_ADDRESS_SHIFT 4
#define KBANDIP_DDR_FFT_DDR_BRIDGE_SLAVE_ADDRESS_WIDTH 26
#define KBANDIP_DDR_FFT_DDR_BRIDGE_SUB_WINDOW_COUNT 1

/*
 * Macros for module 'KBandIP_KBandInput_1', class 'altera_msgdma'.
 * The macros are prefixed with 'KBANDIP_KBANDINPUT_1_'.
 * The prefix comes from the module name.
 */
#define KBANDIP_KBANDINPUT_1_COMPONENT_TYPE altera_msgdma
#define KBANDIP_KBANDINPUT_1_COMPONENT_NAME KBandIP_KBandInput_1
#define KBANDIP_KBANDINPUT_1_BURST_ENABLE 0
#define KBANDIP_KBANDINPUT_1_BURST_WRAPPING_SUPPORT 0
#define KBANDIP_KBANDINPUT_1_CHANNEL_ENABLE 0
#define KBANDIP_KBANDINPUT_1_CHANNEL_ENABLE_DERIVED 0
#define KBANDIP_KBANDINPUT_1_CHANNEL_WIDTH 8
#define KBANDIP_KBANDINPUT_1_DATA_FIFO_DEPTH 32
#define KBANDIP_KBANDINPUT_1_DATA_WIDTH 32
#define KBANDIP_KBANDINPUT_1_DESCRIPTOR_FIFO_DEPTH 128
#define KBANDIP_KBANDINPUT_1_DMA_MODE 1
#define KBANDIP_KBANDINPUT_1_ENHANCED_FEATURES 0
#define KBANDIP_KBANDINPUT_1_ERROR_ENABLE 0
#define KBANDIP_KBANDINPUT_1_ERROR_ENABLE_DERIVED 0
#define KBANDIP_KBANDINPUT_1_ERROR_WIDTH 8
#define KBANDIP_KBANDINPUT_1_MAX_BURST_COUNT 2
#define KBANDIP_KBANDINPUT_1_MAX_BYTE 4096
#define KBANDIP_KBANDINPUT_1_MAX_STRIDE 1
#define KBANDIP_KBANDINPUT_1_PACKET_ENABLE 0
#define KBANDIP_KBANDINPUT_1_PACKET_ENABLE_DERIVED 0
#define KBANDIP_KBANDINPUT_1_PREFETCHER_ENABLE 0
#define KBANDIP_KBANDINPUT_1_PROGRAMMABLE_BURST_ENABLE 0
#define KBANDIP_KBANDINPUT_1_RESPONSE_PORT 2
#define KBANDIP_KBANDINPUT_1_STRIDE_ENABLE 0
#define KBANDIP_KBANDINPUT_1_STRIDE_ENABLE_DERIVED 0
#define KBANDIP_KBANDINPUT_1_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'KBandIP_KBandInput_1'.
 * The macros are prefixed with 'KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_BASE 0x0
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_END 0xfff
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define KBANDIP_KBANDINPUT_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'fft_ddr_bridge', class 'altera_address_span_extender'
 * Path to the device is from the master group 'KBandIP_KBandInput_1'.
 * The macros are prefixed with 'KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_COMPONENT_TYPE altera_address_span_extender
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_COMPONENT_NAME fft_ddr_bridge
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_BASE 0x40000000
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_SPAN 1073741824
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_END 0x7fffffff
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_BURSTCOUNT_WIDTH 5
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_BYTEENABLE_WIDTH 16
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_CNTL_ADDRESS_WIDTH 1
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_DATA_WIDTH 128
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_MASTER_ADDRESS_WIDTH 32
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_MAX_BURST_BYTES 256
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_MAX_BURST_WORDS 16
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_SLAVE_ADDRESS_SHIFT 4
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_SLAVE_ADDRESS_WIDTH 26
#define KBANDIP_KBANDINPUT_1_FFT_DDR_BRIDGE_SUB_WINDOW_COUNT 1

/*
 * Macros for module 'KBandIP_KBandOutput', class 'altera_msgdma'.
 * The macros are prefixed with 'KBANDIP_KBANDOUTPUT_'.
 * The prefix comes from the module name.
 */
#define KBANDIP_KBANDOUTPUT_COMPONENT_TYPE altera_msgdma
#define KBANDIP_KBANDOUTPUT_COMPONENT_NAME KBandIP_KBandOutput
#define KBANDIP_KBANDOUTPUT_BURST_ENABLE 0
#define KBANDIP_KBANDOUTPUT_BURST_WRAPPING_SUPPORT 0
#define KBANDIP_KBANDOUTPUT_CHANNEL_ENABLE 0
#define KBANDIP_KBANDOUTPUT_CHANNEL_ENABLE_DERIVED 0
#define KBANDIP_KBANDOUTPUT_CHANNEL_WIDTH 8
#define KBANDIP_KBANDOUTPUT_DATA_FIFO_DEPTH 32
#define KBANDIP_KBANDOUTPUT_DATA_WIDTH 128
#define KBANDIP_KBANDOUTPUT_DESCRIPTOR_FIFO_DEPTH 128
#define KBANDIP_KBANDOUTPUT_DMA_MODE 2
#define KBANDIP_KBANDOUTPUT_ENHANCED_FEATURES 0
#define KBANDIP_KBANDOUTPUT_ERROR_ENABLE 0
#define KBANDIP_KBANDOUTPUT_ERROR_ENABLE_DERIVED 0
#define KBANDIP_KBANDOUTPUT_ERROR_WIDTH 8
#define KBANDIP_KBANDOUTPUT_MAX_BURST_COUNT 2
#define KBANDIP_KBANDOUTPUT_MAX_BYTE 524288
#define KBANDIP_KBANDOUTPUT_MAX_STRIDE 1
#define KBANDIP_KBANDOUTPUT_PACKET_ENABLE 0
#define KBANDIP_KBANDOUTPUT_PACKET_ENABLE_DERIVED 0
#define KBANDIP_KBANDOUTPUT_PREFETCHER_ENABLE 0
#define KBANDIP_KBANDOUTPUT_PROGRAMMABLE_BURST_ENABLE 0
#define KBANDIP_KBANDOUTPUT_RESPONSE_PORT 2
#define KBANDIP_KBANDOUTPUT_STRIDE_ENABLE 0
#define KBANDIP_KBANDOUTPUT_STRIDE_ENABLE_DERIVED 0
#define KBANDIP_KBANDOUTPUT_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_onchip_mem_FPGA_Slave', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'KBandIP_KBandOutput'.
 * The macros are prefixed with 'KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_TYPE altera_avalon_onchip_memory2
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_NAME KBandIP_onchip_mem_FPGA_Slave
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_BASE 0x0
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SPAN 262144
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_END 0x3ffff
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_CONTENTS_INFO ""
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_DUAL_PORT 0
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_GUI_RAM_BLOCK_TYPE AUTO
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_FPGA_Slave
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_MEM_CONTENT 1
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INSTANCE_ID NONE
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_NON_DEFAULT_INIT_FILE_ENABLED 0
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_RAM_BLOCK_TYPE AUTO
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_READ_DURING_WRITE_MODE DONT_CARE
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SINGLE_CLOCK_OP 0
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_MULTIPLE 1
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_VALUE 262144
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_WRITABLE 1
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_DAT_SYM 1
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_HEX 1
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HAS_BYTE_LANE 0
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define KBANDIP_KBANDOUTPUT_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_FPGA_Slave

/*
 * Macros for device 'fft_ddr_bridge', class 'altera_address_span_extender'
 * Path to the device is from the master group 'KBandIP_KBandOutput'.
 * The macros are prefixed with 'KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_COMPONENT_TYPE altera_address_span_extender
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_COMPONENT_NAME fft_ddr_bridge
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_BASE 0x40000000
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_SPAN 1073741824
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_END 0x7fffffff
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_BURSTCOUNT_WIDTH 5
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_BYTEENABLE_WIDTH 16
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_CNTL_ADDRESS_WIDTH 1
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_DATA_WIDTH 128
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_MASTER_ADDRESS_WIDTH 32
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_MAX_BURST_BYTES 256
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_MAX_BURST_WORDS 16
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_SLAVE_ADDRESS_SHIFT 4
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_SLAVE_ADDRESS_WIDTH 26
#define KBANDIP_KBANDOUTPUT_FFT_DDR_BRIDGE_SUB_WINDOW_COUNT 1

/*
 * Macros for device 'KBandIP_onchip_mem_FPGA_Slave', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'KBandIP_mm_bridge_FPGA_Slave'.
 * The macros are prefixed with 'KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_TYPE altera_avalon_onchip_memory2
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_NAME KBandIP_onchip_mem_FPGA_Slave
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_BASE 0x0
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SPAN 262144
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_END 0x3ffff
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_CONTENTS_INFO ""
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_DUAL_PORT 0
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_GUI_RAM_BLOCK_TYPE AUTO
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_FPGA_Slave
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_MEM_CONTENT 1
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INSTANCE_ID NONE
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_NON_DEFAULT_INIT_FILE_ENABLED 0
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_RAM_BLOCK_TYPE AUTO
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_READ_DURING_WRITE_MODE DONT_CARE
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SINGLE_CLOCK_OP 0
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_MULTIPLE 1
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_VALUE 262144
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_WRITABLE 1
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_DAT_SYM 1
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_HEX 1
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HAS_BYTE_LANE 0
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define KBANDIP_MM_BRIDGE_FPGA_SLAVE_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_FPGA_Slave

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'KBandIP_mm_bridge_LW'.
 * The macros are prefixed with 'KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_BASE 0x0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_END 0xfff
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'KBandIP_KBandInput_1_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'KBandIP_mm_bridge_LW'.
 * The macros are prefixed with 'KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_TYPE altera_msgdma
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_NAME KBandIP_KBandInput_1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_BASE 0x10000
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_SPAN 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_END 0x1001f
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_BURST_WRAPPING_SUPPORT 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_DATA_FIFO_DEPTH 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_DATA_WIDTH 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_DMA_MODE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_ENHANCED_FEATURES 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_ERROR_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_MAX_BURST_COUNT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_MAX_BYTE 4096
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_MAX_STRIDE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_PREFETCHER_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_RESPONSE_PORT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'KBandIP_mm_bridge_LW'.
 * The macros are prefixed with 'KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_TYPE altera_msgdma
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_NAME KBandIP_KBandOutput
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_BASE 0x10040
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_SPAN 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_END 0x1005f
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_BURST_WRAPPING_SUPPORT 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_DATA_FIFO_DEPTH 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_DATA_WIDTH 128
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_DMA_MODE 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_ENHANCED_FEATURES 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_ERROR_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_MAX_BURST_COUNT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_MAX_BYTE 524288
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_MAX_STRIDE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_PREFETCHER_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_RESPONSE_PORT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_KBandInput_1_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'KBandIP_mm_bridge_LW'.
 * The macros are prefixed with 'KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandInput_1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BASE 0x10060
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_SPAN 16
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_END 0x1006f
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DMA_MODE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BYTE 4096
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'KBandIP_mm_bridge_LW'.
 * The macros are prefixed with 'KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandOutput
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BASE 0x10080
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_SPAN 16
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_END 0x1008f
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_WIDTH 128
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BYTE 524288
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define KBANDIP_MM_BRIDGE_LW_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_BASE 0x0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_END 0x7fffffff
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_WRITABLE 1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC0_BASE 0xff700000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC0_SPAN 8192
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC1_BASE 0xff702000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC1_SPAN 8192
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDMMC_BASE 0xff704000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDMMC_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_QSPI_BASE 0xff705000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_QSPI_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_FPGAMGR_BASE 0xff706000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_FPGAMGR_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO0_BASE 0xff708000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO0_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO1_BASE 0xff709000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO1_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO2_BASE 0xff70a000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO2_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L3REGS_BASE 0xff800000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L3REGS_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_NAND0_BASE 0xff900000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_NAND0_SPAN 65536
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB0_COMPONENT_TYPE usb
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB0_BASE 0xffb00000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB0_SPAN 262144
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB1_COMPONENT_TYPE usb
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB1_BASE 0xffb40000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB1_SPAN 262144
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN0_BASE 0xffc00000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN0_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN1_BASE 0xffc01000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN1_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_BASE 0xffc02000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_END 0xffc020ff
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_FIFO_DEPTH 128
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_FIFO_HWFC 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_FIFO_MODE 1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_FIFO_SWFC 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_BASE 0xffc03000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_END 0xffc030ff
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_FIFO_DEPTH 128
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_FIFO_HWFC 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_FIFO_MODE 1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_FIFO_SWFC 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C0_BASE 0xffc04000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C0_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C1_BASE 0xffc05000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C1_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C2_BASE 0xffc06000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C2_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C3_BASE 0xffc07000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C3_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER0_BASE 0xffc08000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER0_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER1_BASE 0xffc09000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER1_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDRCTL_BASE 0xffc25000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDRCTL_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER2_BASE 0xffd00000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER2_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER3_BASE 0xffd01000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER3_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_CLKMGR_BASE 0xffd04000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_CLKMGR_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_RSTMGR_BASE 0xffd05000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_RSTMGR_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SYSMGR_BASE 0xffd08000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SYSMGR_SPAN 1024
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DMA_BASE 0xffe01000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DMA_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM0_COMPONENT_TYPE spi
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM0_BASE 0xfff00000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM0_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM1_COMPONENT_TYPE spi
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM1_BASE 0xfff01000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM1_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER_BASE 0xfffec600
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER_SPAN 256
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_ARM_GIC_0_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L2_BASE 0xfffef000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L2_SPAN 4096
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'axi_bridge_for_acp_128_0'.
 * The macros are prefixed with 'AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_SPAN 65536
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_END 0xffffffff
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_WRITABLE 1
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define AXI_BRIDGE_FOR_ACP_128_0_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for module 'fft_ddr_bridge', class 'altera_address_span_extender'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_'.
 * The prefix comes from the module name.
 */
#define FFT_DDR_BRIDGE_COMPONENT_TYPE altera_address_span_extender
#define FFT_DDR_BRIDGE_COMPONENT_NAME fft_ddr_bridge
#define FFT_DDR_BRIDGE_BURSTCOUNT_WIDTH 5
#define FFT_DDR_BRIDGE_BYTEENABLE_WIDTH 16
#define FFT_DDR_BRIDGE_CNTL_ADDRESS_WIDTH 1
#define FFT_DDR_BRIDGE_DATA_WIDTH 128
#define FFT_DDR_BRIDGE_MASTER_ADDRESS_WIDTH 32
#define FFT_DDR_BRIDGE_MAX_BURST_BYTES 256
#define FFT_DDR_BRIDGE_MAX_BURST_WORDS 16
#define FFT_DDR_BRIDGE_SLAVE_ADDRESS_SHIFT 4
#define FFT_DDR_BRIDGE_SLAVE_ADDRESS_WIDTH 26
#define FFT_DDR_BRIDGE_SUB_WINDOW_COUNT 1

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_BASE 0x0
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_END 0x7fffffff
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_WRITABLE 1
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define FFT_DDR_BRIDGE_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define FFT_DDR_BRIDGE_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define FFT_DDR_BRIDGE_HPS_0_GMAC0_BASE 0xff700000
#define FFT_DDR_BRIDGE_HPS_0_GMAC0_SPAN 8192
#define FFT_DDR_BRIDGE_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define FFT_DDR_BRIDGE_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define FFT_DDR_BRIDGE_HPS_0_GMAC1_BASE 0xff702000
#define FFT_DDR_BRIDGE_HPS_0_GMAC1_SPAN 8192
#define FFT_DDR_BRIDGE_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define FFT_DDR_BRIDGE_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define FFT_DDR_BRIDGE_HPS_0_SDMMC_BASE 0xff704000
#define FFT_DDR_BRIDGE_HPS_0_SDMMC_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define FFT_DDR_BRIDGE_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define FFT_DDR_BRIDGE_HPS_0_QSPI_BASE 0xff705000
#define FFT_DDR_BRIDGE_HPS_0_QSPI_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define FFT_DDR_BRIDGE_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define FFT_DDR_BRIDGE_HPS_0_FPGAMGR_BASE 0xff706000
#define FFT_DDR_BRIDGE_HPS_0_FPGAMGR_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define FFT_DDR_BRIDGE_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define FFT_DDR_BRIDGE_HPS_0_GPIO0_BASE 0xff708000
#define FFT_DDR_BRIDGE_HPS_0_GPIO0_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define FFT_DDR_BRIDGE_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define FFT_DDR_BRIDGE_HPS_0_GPIO1_BASE 0xff709000
#define FFT_DDR_BRIDGE_HPS_0_GPIO1_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define FFT_DDR_BRIDGE_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define FFT_DDR_BRIDGE_HPS_0_GPIO2_BASE 0xff70a000
#define FFT_DDR_BRIDGE_HPS_0_GPIO2_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define FFT_DDR_BRIDGE_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define FFT_DDR_BRIDGE_HPS_0_L3REGS_BASE 0xff800000
#define FFT_DDR_BRIDGE_HPS_0_L3REGS_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define FFT_DDR_BRIDGE_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define FFT_DDR_BRIDGE_HPS_0_NAND0_BASE 0xff900000
#define FFT_DDR_BRIDGE_HPS_0_NAND0_SPAN 65536
#define FFT_DDR_BRIDGE_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_USB0_COMPONENT_TYPE usb
#define FFT_DDR_BRIDGE_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define FFT_DDR_BRIDGE_HPS_0_USB0_BASE 0xffb00000
#define FFT_DDR_BRIDGE_HPS_0_USB0_SPAN 262144
#define FFT_DDR_BRIDGE_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_USB1_COMPONENT_TYPE usb
#define FFT_DDR_BRIDGE_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define FFT_DDR_BRIDGE_HPS_0_USB1_BASE 0xffb40000
#define FFT_DDR_BRIDGE_HPS_0_USB1_SPAN 262144
#define FFT_DDR_BRIDGE_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define FFT_DDR_BRIDGE_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define FFT_DDR_BRIDGE_HPS_0_DCAN0_BASE 0xffc00000
#define FFT_DDR_BRIDGE_HPS_0_DCAN0_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define FFT_DDR_BRIDGE_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define FFT_DDR_BRIDGE_HPS_0_DCAN1_BASE 0xffc01000
#define FFT_DDR_BRIDGE_HPS_0_DCAN1_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define FFT_DDR_BRIDGE_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define FFT_DDR_BRIDGE_HPS_0_UART0_BASE 0xffc02000
#define FFT_DDR_BRIDGE_HPS_0_UART0_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_UART0_END 0xffc020ff
#define FFT_DDR_BRIDGE_HPS_0_UART0_FIFO_DEPTH 128
#define FFT_DDR_BRIDGE_HPS_0_UART0_FIFO_HWFC 0
#define FFT_DDR_BRIDGE_HPS_0_UART0_FIFO_MODE 1
#define FFT_DDR_BRIDGE_HPS_0_UART0_FIFO_SWFC 0
#define FFT_DDR_BRIDGE_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define FFT_DDR_BRIDGE_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define FFT_DDR_BRIDGE_HPS_0_UART1_BASE 0xffc03000
#define FFT_DDR_BRIDGE_HPS_0_UART1_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_UART1_END 0xffc030ff
#define FFT_DDR_BRIDGE_HPS_0_UART1_FIFO_DEPTH 128
#define FFT_DDR_BRIDGE_HPS_0_UART1_FIFO_HWFC 0
#define FFT_DDR_BRIDGE_HPS_0_UART1_FIFO_MODE 1
#define FFT_DDR_BRIDGE_HPS_0_UART1_FIFO_SWFC 0
#define FFT_DDR_BRIDGE_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define FFT_DDR_BRIDGE_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define FFT_DDR_BRIDGE_HPS_0_I2C0_BASE 0xffc04000
#define FFT_DDR_BRIDGE_HPS_0_I2C0_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define FFT_DDR_BRIDGE_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define FFT_DDR_BRIDGE_HPS_0_I2C1_BASE 0xffc05000
#define FFT_DDR_BRIDGE_HPS_0_I2C1_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define FFT_DDR_BRIDGE_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define FFT_DDR_BRIDGE_HPS_0_I2C2_BASE 0xffc06000
#define FFT_DDR_BRIDGE_HPS_0_I2C2_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define FFT_DDR_BRIDGE_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define FFT_DDR_BRIDGE_HPS_0_I2C3_BASE 0xffc07000
#define FFT_DDR_BRIDGE_HPS_0_I2C3_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define FFT_DDR_BRIDGE_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define FFT_DDR_BRIDGE_HPS_0_TIMER0_BASE 0xffc08000
#define FFT_DDR_BRIDGE_HPS_0_TIMER0_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define FFT_DDR_BRIDGE_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define FFT_DDR_BRIDGE_HPS_0_TIMER1_BASE 0xffc09000
#define FFT_DDR_BRIDGE_HPS_0_TIMER1_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define FFT_DDR_BRIDGE_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define FFT_DDR_BRIDGE_HPS_0_SDRCTL_BASE 0xffc25000
#define FFT_DDR_BRIDGE_HPS_0_SDRCTL_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define FFT_DDR_BRIDGE_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define FFT_DDR_BRIDGE_HPS_0_TIMER2_BASE 0xffd00000
#define FFT_DDR_BRIDGE_HPS_0_TIMER2_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define FFT_DDR_BRIDGE_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define FFT_DDR_BRIDGE_HPS_0_TIMER3_BASE 0xffd01000
#define FFT_DDR_BRIDGE_HPS_0_TIMER3_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define FFT_DDR_BRIDGE_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define FFT_DDR_BRIDGE_HPS_0_CLKMGR_BASE 0xffd04000
#define FFT_DDR_BRIDGE_HPS_0_CLKMGR_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define FFT_DDR_BRIDGE_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define FFT_DDR_BRIDGE_HPS_0_RSTMGR_BASE 0xffd05000
#define FFT_DDR_BRIDGE_HPS_0_RSTMGR_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define FFT_DDR_BRIDGE_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define FFT_DDR_BRIDGE_HPS_0_SYSMGR_BASE 0xffd08000
#define FFT_DDR_BRIDGE_HPS_0_SYSMGR_SPAN 1024
#define FFT_DDR_BRIDGE_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define FFT_DDR_BRIDGE_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define FFT_DDR_BRIDGE_HPS_0_DMA_BASE 0xffe01000
#define FFT_DDR_BRIDGE_HPS_0_DMA_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_SPIM0_COMPONENT_TYPE spi
#define FFT_DDR_BRIDGE_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define FFT_DDR_BRIDGE_HPS_0_SPIM0_BASE 0xfff00000
#define FFT_DDR_BRIDGE_HPS_0_SPIM0_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_SPIM1_COMPONENT_TYPE spi
#define FFT_DDR_BRIDGE_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define FFT_DDR_BRIDGE_HPS_0_SPIM1_BASE 0xfff01000
#define FFT_DDR_BRIDGE_HPS_0_SPIM1_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define FFT_DDR_BRIDGE_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define FFT_DDR_BRIDGE_HPS_0_TIMER_BASE 0xfffec600
#define FFT_DDR_BRIDGE_HPS_0_TIMER_SPAN 256
#define FFT_DDR_BRIDGE_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define FFT_DDR_BRIDGE_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define FFT_DDR_BRIDGE_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define FFT_DDR_BRIDGE_HPS_0_ARM_GIC_0_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define FFT_DDR_BRIDGE_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define FFT_DDR_BRIDGE_HPS_0_L2_BASE 0xfffef000
#define FFT_DDR_BRIDGE_HPS_0_L2_SPAN 4096
#define FFT_DDR_BRIDGE_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'fft_ddr_bridge'.
 * The macros are prefixed with 'FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_SPAN 65536
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_END 0xffffffff
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_WRITABLE 1
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define FFT_DDR_BRIDGE_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_BASE 0x1000
#define FPGA_ONLY_MASTER_SYSID_QSYS_SPAN 8
#define FPGA_ONLY_MASTER_SYSID_QSYS_END 0x1007
#define FPGA_ONLY_MASTER_SYSID_QSYS_ID 2899645442
#define FPGA_ONLY_MASTER_SYSID_QSYS_TIMESTAMP 1507751878

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_BASE 0x60000
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_SPAN 8
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_END 0x60007

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_BASE 0x80000
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_END 0x80fff
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define FPGA_ONLY_MASTER_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'KBandIP_KBandInput_1_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_TYPE altera_msgdma
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_NAME KBandIP_KBandInput_1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_BASE 0x90000
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_SPAN 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_END 0x9001f
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_BURST_WRAPPING_SUPPORT 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_DATA_FIFO_DEPTH 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_DMA_MODE 1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_ENHANCED_FEATURES 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_ERROR_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_MAX_BURST_COUNT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_MAX_BYTE 4096
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_MAX_STRIDE 1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_PREFETCHER_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_RESPONSE_PORT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_TYPE altera_msgdma
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_NAME KBandIP_KBandOutput
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_BASE 0x90040
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_SPAN 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_END 0x9005f
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_BURST_WRAPPING_SUPPORT 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_DATA_FIFO_DEPTH 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_DATA_WIDTH 128
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_DMA_MODE 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_ENHANCED_FEATURES 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_ERROR_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_MAX_BURST_COUNT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_MAX_BYTE 524288
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_MAX_STRIDE 1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_PREFETCHER_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_RESPONSE_PORT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_KBandInput_1_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandInput_1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BASE 0x90060
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_SPAN 16
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_END 0x9006f
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DMA_MODE 1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BYTE 4096
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandOutput
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BASE 0x90080
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_SPAN 16
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_END 0x9008f
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_WIDTH 128
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BYTE 524288
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define FPGA_ONLY_MASTER_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_onchip_mem_FPGA_Slave', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_NAME KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_BASE 0x0
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SPAN 262144
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_END 0x3ffff
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_CONTENTS_INFO ""
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_DUAL_PORT 0
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_MEM_CONTENT 1
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INSTANCE_ID NONE
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_RAM_BLOCK_TYPE AUTO
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SINGLE_CLOCK_OP 0
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_MULTIPLE 1
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_VALUE 262144
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_WRITABLE 1
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_FPGA_Slave

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_SYSID_QSYS_BASE 0x1000
#define HPS_0_SYSID_QSYS_SPAN 8
#define HPS_0_SYSID_QSYS_END 0x1007
#define HPS_0_SYSID_QSYS_ID 2899645442
#define HPS_0_SYSID_QSYS_TIMESTAMP 1507751878

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define HPS_0_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define HPS_0_INTR_CAPTURER_0_BASE 0x60000
#define HPS_0_INTR_CAPTURER_0_SPAN 8
#define HPS_0_INTR_CAPTURER_0_END 0x60007

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_BASE 0x80000
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_END 0x80fff
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'KBandIP_KBandInput_1_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_KBANDIP_KBANDINPUT_1_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_BASE 0x90000
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_SPAN 32
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_END 0x9001f
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_IRQ 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_WIDTH 8
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_DATA_WIDTH 32
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_DMA_MODE 1
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_ENHANCED_FEATURES 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_ERROR_WIDTH 8
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_MAX_BURST_COUNT 2
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_MAX_BYTE 4096
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_MAX_STRIDE 1
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_PREFETCHER_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_RESPONSE_PORT 2
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_KBANDIP_KBANDOUTPUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_BASE 0x90040
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_SPAN 32
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_END 0x9005f
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_IRQ 4
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_WIDTH 8
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_DATA_WIDTH 128
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_DMA_MODE 2
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_ENHANCED_FEATURES 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_ERROR_WIDTH 8
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_MAX_BURST_COUNT 2
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_MAX_BYTE 524288
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_MAX_STRIDE 1
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_PREFETCHER_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_RESPONSE_PORT 2
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_KBandInput_1_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BASE 0x90060
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_END 0x9006f
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DMA_MODE 1
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BYTE 4096
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BASE 0x90080
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_END 0x9008f
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_WIDTH 128
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BYTE 524288
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'KBandIP_onchip_mem_FPGA_Slave', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_NAME KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_BASE 0x0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SPAN 262144
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_END 0x3ffff
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_CONTENTS_INFO ""
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_DUAL_PORT 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INSTANCE_ID NONE
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_VALUE 262144
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_WRITABLE 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_FPGA_Slave

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_BASE 0x1000
#define HPS_0_BRIDGES_SYSID_QSYS_SPAN 8
#define HPS_0_BRIDGES_SYSID_QSYS_END 0x1007
#define HPS_0_BRIDGES_SYSID_QSYS_ID 2899645442
#define HPS_0_BRIDGES_SYSID_QSYS_TIMESTAMP 1507751878

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define HPS_0_BRIDGES_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define HPS_0_BRIDGES_INTR_CAPTURER_0_BASE 0x60000
#define HPS_0_BRIDGES_INTR_CAPTURER_0_SPAN 8
#define HPS_0_BRIDGES_INTR_CAPTURER_0_END 0x60007

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_BASE 0x80000
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_END 0x80fff
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_BRIDGES_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'KBandIP_KBandInput_1_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_BASE 0x90000
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_SPAN 32
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_END 0x9001f
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_DATA_WIDTH 32
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_DMA_MODE 1
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_ENHANCED_FEATURES 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_ERROR_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_MAX_BURST_COUNT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_MAX_BYTE 4096
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_MAX_STRIDE 1
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_PREFETCHER_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_RESPONSE_PORT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_BASE 0x90040
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_SPAN 32
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_END 0x9005f
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_DATA_WIDTH 128
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_DMA_MODE 2
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_ENHANCED_FEATURES 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_ERROR_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_MAX_BURST_COUNT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_MAX_BYTE 524288
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_MAX_STRIDE 1
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_PREFETCHER_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_RESPONSE_PORT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_KBandInput_1_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BASE 0x90060
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_END 0x9006f
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DMA_MODE 1
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BYTE 4096
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BASE 0x90080
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_END 0x9008f
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_WIDTH 128
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BYTE 524288
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_BRIDGES_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_BRIDGES_HPS_0_GMAC0_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_BRIDGES_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_BRIDGES_HPS_0_GMAC1_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_BRIDGES_HPS_0_SDMMC_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_BRIDGES_HPS_0_QSPI_SPAN 256
#define HPS_0_BRIDGES_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_BRIDGES_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_BRIDGES_HPS_0_GPIO0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_BRIDGES_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_BRIDGES_HPS_0_GPIO1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_BRIDGES_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_BRIDGES_HPS_0_GPIO2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_BRIDGES_HPS_0_L3REGS_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_BRIDGES_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_BRIDGES_HPS_0_NAND0_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_BRIDGES_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_BRIDGES_HPS_0_USB0_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_BRIDGES_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_BRIDGES_HPS_0_USB1_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_BRIDGES_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_BRIDGES_HPS_0_DCAN0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_BRIDGES_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_BRIDGES_HPS_0_DCAN1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_BRIDGES_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_BRIDGES_HPS_0_UART0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART0_END 0xffc020ff
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_BRIDGES_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_BRIDGES_HPS_0_UART1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART1_END 0xffc030ff
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_BRIDGES_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_BRIDGES_HPS_0_I2C0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_BRIDGES_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_BRIDGES_HPS_0_I2C1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_BRIDGES_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_BRIDGES_HPS_0_I2C2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_BRIDGES_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_BRIDGES_HPS_0_I2C3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_BRIDGES_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_BRIDGES_HPS_0_TIMER0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_BRIDGES_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_BRIDGES_HPS_0_TIMER1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_BRIDGES_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_BRIDGES_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_BRIDGES_HPS_0_TIMER2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_BRIDGES_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_BRIDGES_HPS_0_TIMER3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_BRIDGES_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_BRIDGES_HPS_0_RSTMGR_SPAN 256
#define HPS_0_BRIDGES_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_BRIDGES_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_BRIDGES_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_BRIDGES_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_BRIDGES_HPS_0_DMA_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_BRIDGES_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_BRIDGES_HPS_0_SPIM0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_BRIDGES_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_BRIDGES_HPS_0_SPIM1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_BRIDGES_HPS_0_TIMER_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_BRIDGES_HPS_0_L2_BASE 0xfffef000
#define HPS_0_BRIDGES_HPS_0_L2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'KBandIP_onchip_mem_FPGA_Slave', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_NAME KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_BASE 0xc0000000
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SPAN 262144
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_END 0xc003ffff
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_DUAL_PORT 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_VALUE 262144
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_WRITABLE 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_FPGA_Slave

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_BASE 0xff201000
#define HPS_0_ARM_A9_0_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_0_SYSID_QSYS_END 0xff201007
#define HPS_0_ARM_A9_0_SYSID_QSYS_ID 2899645442
#define HPS_0_ARM_A9_0_SYSID_QSYS_TIMESTAMP 1507751878

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define HPS_0_ARM_A9_0_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define HPS_0_ARM_A9_0_INTR_CAPTURER_0_BASE 0xff260000
#define HPS_0_ARM_A9_0_INTR_CAPTURER_0_SPAN 8
#define HPS_0_ARM_A9_0_INTR_CAPTURER_0_END 0xff260007

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_BASE 0xff280000
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_END 0xff280fff
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_ARM_A9_0_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'KBandIP_KBandInput_1_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_BASE 0xff290000
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_SPAN 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_END 0xff29001f
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_DMA_MODE 1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_ERROR_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_MAX_BYTE 4096
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_MAX_STRIDE 1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_RESPONSE_PORT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_BASE 0xff290040
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_SPAN 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_END 0xff29005f
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_DATA_WIDTH 128
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_DMA_MODE 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_ERROR_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_MAX_BYTE 524288
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_MAX_STRIDE 1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_RESPONSE_PORT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_KBandInput_1_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BASE 0xff290060
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_END 0xff29006f
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DMA_MODE 1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BYTE 4096
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BASE 0xff290080
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_END 0xff29008f
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_WIDTH 128
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BYTE 524288
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_0_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'KBandIP_onchip_mem_FPGA_Slave', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_COMPONENT_NAME KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_BASE 0xc0000000
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SPAN 262144
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_END 0xc003ffff
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_DUAL_PORT 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_FPGA_Slave
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_SIZE_VALUE 262144
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_WRITABLE 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_FPGA_SLAVE_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_FPGA_Slave

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_BASE 0xff201000
#define HPS_0_ARM_A9_1_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_1_SYSID_QSYS_END 0xff201007
#define HPS_0_ARM_A9_1_SYSID_QSYS_ID 2899645442
#define HPS_0_ARM_A9_1_SYSID_QSYS_TIMESTAMP 1507751878

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define HPS_0_ARM_A9_1_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define HPS_0_ARM_A9_1_INTR_CAPTURER_0_BASE 0xff260000
#define HPS_0_ARM_A9_1_INTR_CAPTURER_0_SPAN 8
#define HPS_0_ARM_A9_1_INTR_CAPTURER_0_END 0xff260007

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_BASE 0xff280000
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_END 0xff280fff
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define HPS_0_ARM_A9_1_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'KBandIP_KBandInput_1_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_BASE 0xff290000
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_SPAN 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_END 0xff29001f
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_DMA_MODE 1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_ERROR_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_MAX_BYTE 4096
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_MAX_STRIDE 1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_RESPONSE_PORT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_BASE 0xff290040
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_SPAN 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_END 0xff29005f
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_DATA_WIDTH 128
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_DMA_MODE 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_ERROR_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_MAX_BYTE 524288
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_MAX_STRIDE 1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_RESPONSE_PORT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_KBandInput_1_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandInput_1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BASE 0xff290060
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_END 0xff29006f
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DMA_MODE 1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BYTE 4096
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandOutput
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BASE 0xff290080
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_END 0xff29008f
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_WIDTH 128
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BYTE 524288
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_1_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'lw_mm_bridge'.
 * The macros are prefixed with 'LW_MM_BRIDGE_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define LW_MM_BRIDGE_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define LW_MM_BRIDGE_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define LW_MM_BRIDGE_SYSID_QSYS_BASE 0x1000
#define LW_MM_BRIDGE_SYSID_QSYS_SPAN 8
#define LW_MM_BRIDGE_SYSID_QSYS_END 0x1007
#define LW_MM_BRIDGE_SYSID_QSYS_ID 2899645442
#define LW_MM_BRIDGE_SYSID_QSYS_TIMESTAMP 1507751878

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'lw_mm_bridge'.
 * The macros are prefixed with 'LW_MM_BRIDGE_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define LW_MM_BRIDGE_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define LW_MM_BRIDGE_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define LW_MM_BRIDGE_INTR_CAPTURER_0_BASE 0x60000
#define LW_MM_BRIDGE_INTR_CAPTURER_0_SPAN 8
#define LW_MM_BRIDGE_INTR_CAPTURER_0_END 0x60007

/*
 * Macros for device 'KBandIP_onchip_mem_LW', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'lw_mm_bridge'.
 * The macros are prefixed with 'LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_COMPONENT_TYPE altera_avalon_onchip_memory2
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_COMPONENT_NAME KBandIP_onchip_mem_LW
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_BASE 0x80000
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_SPAN 4096
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_END 0x80fff
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_CONTENTS_INFO ""
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_DUAL_PORT 0
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_GUI_RAM_BLOCK_TYPE AUTO
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_INIT_CONTENTS_FILE soc_system_KBandIP_onchip_mem_LW
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_INIT_MEM_CONTENT 1
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_INSTANCE_ID NONE
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_NON_DEFAULT_INIT_FILE_ENABLED 0
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_RAM_BLOCK_TYPE AUTO
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_READ_DURING_WRITE_MODE DONT_CARE
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_SINGLE_CLOCK_OP 0
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_SIZE_MULTIPLE 1
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_SIZE_VALUE 4096
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_WRITABLE 1
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_DAT_SYM 1
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_GENERATE_HEX 1
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HAS_BYTE_LANE 0
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_DATA_WIDTH 128
#define LW_MM_BRIDGE_KBANDIP_ONCHIP_MEM_LW_MEMORY_INFO_MEM_INIT_FILENAME soc_system_KBandIP_onchip_mem_LW

/*
 * Macros for device 'KBandIP_KBandInput_1_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'lw_mm_bridge'.
 * The macros are prefixed with 'LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_TYPE altera_msgdma
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_COMPONENT_NAME KBandIP_KBandInput_1
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_BASE 0x90000
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_SPAN 32
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_END 0x9001f
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_BURST_WRAPPING_SUPPORT 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_CHANNEL_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_DATA_FIFO_DEPTH 32
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_DATA_WIDTH 32
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_DMA_MODE 1
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_ENHANCED_FEATURES 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_ERROR_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_ERROR_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_MAX_BURST_COUNT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_MAX_BYTE 4096
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_MAX_STRIDE 1
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_PACKET_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_PREFETCHER_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_RESPONSE_PORT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_STRIDE_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'lw_mm_bridge'.
 * The macros are prefixed with 'LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_TYPE altera_msgdma
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_COMPONENT_NAME KBandIP_KBandOutput
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_BASE 0x90040
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_SPAN 32
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_END 0x9005f
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_BURST_WRAPPING_SUPPORT 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_CHANNEL_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_DATA_FIFO_DEPTH 32
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_DATA_WIDTH 128
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_DESCRIPTOR_FIFO_DEPTH 128
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_DMA_MODE 2
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_ENHANCED_FEATURES 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_ERROR_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_ERROR_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_MAX_BURST_COUNT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_MAX_BYTE 524288
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_MAX_STRIDE 1
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_PACKET_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_PREFETCHER_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_RESPONSE_PORT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_STRIDE_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_CSR_TRANSFER_TYPE Aligned Accesses

/*
 * Macros for device 'KBandIP_KBandInput_1_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'lw_mm_bridge'.
 * The macros are prefixed with 'LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandInput_1
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BASE 0x90060
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_SPAN 16
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_END 0x9006f
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DATA_WIDTH 32
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_DMA_MODE 1
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_BYTE 4096
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDINPUT_1_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'KBandIP_KBandOutput_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'lw_mm_bridge'.
 * The macros are prefixed with 'LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_COMPONENT_NAME KBandIP_KBandOutput
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BASE 0x90080
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_SPAN 16
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_END 0x9008f
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 32
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DATA_WIDTH 128
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 128
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_DMA_MODE 2
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_BYTE 524288
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define LW_MM_BRIDGE_KBANDIP_KBANDOUTPUT_DESCRIPTOR_SLAVE_TRANSFER_TYPE Aligned Accesses


#endif /* _ALTERA_SOC_SYSTEM_H_ */
