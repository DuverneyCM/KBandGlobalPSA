-- KBandIPsubPro_KBand21_0.vhd

-- Generated using ACDS version 19.1 240

library IEEE;
library KBand21_10;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity KBandIPsubPro_KBand21_0 is
	port (
		reset_reset  : in  std_logic                      := '0';             --          reset.reset
		iADN1_data   : in  std_logic_vector(7 downto 0)   := (others => '0'); --          iADN1.data
		oADN1_ready  : out std_logic;                                         --               .ready
		iADN1_valid  : in  std_logic                      := '0';             --               .valid
		oArrow_data  : out std_logic_vector(127 downto 0);                    --         oArrow.data
		iArrow_ready : in  std_logic                      := '0';             --               .ready
		oArrow_valid : out std_logic;                                         --               .valid
		clock_int    : in  std_logic                      := '0';             -- clock_internal.clk
		clock_ext    : in  std_logic                      := '0';             -- clock_external.clk
		iParameters  : in  std_logic_vector(31 downto 0)  := (others => '0'); --     Parameters.export
		iADN2_data   : in  std_logic_vector(7 downto 0)   := (others => '0'); --          iADN2.data
		iADN2_valid  : in  std_logic                      := '0';             --               .valid
		oADN2_ready  : out std_logic                                          --               .ready
	);
end entity KBandIPsubPro_KBand21_0;

architecture rtl of KBandIPsubPro_KBand21_0 is
	component KBandIP21_cmp is
		generic (
			NoCell    : natural := 64;
			dimH      : natural := 8;
			dimSymbol : natural := 32;
			dimADN    : natural := 3;
			bitsOUT   : natural := 128;
			widthu    : natural := 6;
			dimLUT    : natural := 4
		);
		port (
			reset_reset  : in  std_logic                            := 'X';             -- reset
			iADN1_data   : in  std_logic_vector(7 downto 0)         := (others => 'X'); -- data
			oADN1_ready  : out std_logic;                                               -- ready
			iADN1_valid  : in  std_logic                            := 'X';             -- valid
			oArrow_data  : out std_logic_vector(bitsOUT-1 downto 0);                    -- data
			iArrow_ready : in  std_logic                            := 'X';             -- ready
			oArrow_valid : out std_logic;                                               -- valid
			clock_int    : in  std_logic                            := 'X';             -- clk
			clock_ext    : in  std_logic                            := 'X';             -- clk
			iParameters  : in  std_logic_vector(31 downto 0)        := (others => 'X'); -- export
			iADN2_data   : in  std_logic_vector(7 downto 0)         := (others => 'X'); -- data
			iADN2_valid  : in  std_logic                            := 'X';             -- valid
			oADN2_ready  : out std_logic                                                -- ready
		);
	end component KBandIP21_cmp;

	for kband21_0 : KBandIP21_cmp
		use entity KBand21_10.KBandIP21;
begin

	kband21_0 : component KBandIP21_cmp
		generic map (
			NoCell    => 1024,
			dimH      => 4,
			dimSymbol => 8,
			dimADN    => 3,
			bitsOUT   => 128,
			widthu    => 3,
			dimLUT    => 4
		)
		port map (
			reset_reset  => reset_reset,  --          reset.reset
			iADN1_data   => iADN1_data,   --          iADN1.data
			oADN1_ready  => oADN1_ready,  --               .ready
			iADN1_valid  => iADN1_valid,  --               .valid
			oArrow_data  => oArrow_data,  --         oArrow.data
			iArrow_ready => iArrow_ready, --               .ready
			oArrow_valid => oArrow_valid, --               .valid
			clock_int    => clock_int,    -- clock_internal.clk
			clock_ext    => clock_ext,    -- clock_external.clk
			iParameters  => iParameters,  --     Parameters.export
			iADN2_data   => iADN2_data,   --          iADN2.data
			iADN2_valid  => iADN2_valid,  --               .valid
			oADN2_ready  => oADN2_ready   --               .ready
		);

end architecture rtl; -- of KBandIPsubPro_KBand21_0
