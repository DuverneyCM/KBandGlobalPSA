-- KBandIPsubPro_KBandInput_2.vhd

-- Generated using ACDS version 19.1 240

library IEEE;
library altera_msgdma_191;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity KBandIPsubPro_KBandInput_2 is
	port (
		clock_clk                    : in  std_logic                      := '0';             --            clock.clk
		reset_n_reset_n              : in  std_logic                      := '0';             --          reset_n.reset_n
		csr_writedata                : in  std_logic_vector(31 downto 0)  := (others => '0'); --              csr.writedata
		csr_write                    : in  std_logic                      := '0';             --                 .write
		csr_byteenable               : in  std_logic_vector(3 downto 0)   := (others => '0'); --                 .byteenable
		csr_readdata                 : out std_logic_vector(31 downto 0);                     --                 .readdata
		csr_read                     : in  std_logic                      := '0';             --                 .read
		csr_address                  : in  std_logic_vector(2 downto 0)   := (others => '0'); --                 .address
		descriptor_slave_write       : in  std_logic                      := '0';             -- descriptor_slave.write
		descriptor_slave_waitrequest : out std_logic;                                         --                 .waitrequest
		descriptor_slave_writedata   : in  std_logic_vector(127 downto 0) := (others => '0'); --                 .writedata
		descriptor_slave_byteenable  : in  std_logic_vector(15 downto 0)  := (others => '0'); --                 .byteenable
		csr_irq_irq                  : out std_logic;                                         --          csr_irq.irq
		mm_read_address              : out std_logic_vector(31 downto 0);                     --          mm_read.address
		mm_read_read                 : out std_logic;                                         --                 .read
		mm_read_readdata             : in  std_logic_vector(7 downto 0)   := (others => '0'); --                 .readdata
		mm_read_waitrequest          : in  std_logic                      := '0';             --                 .waitrequest
		mm_read_readdatavalid        : in  std_logic                      := '0';             --                 .readdatavalid
		st_source_data               : out std_logic_vector(7 downto 0);                      --        st_source.data
		st_source_valid              : out std_logic;                                         --                 .valid
		st_source_ready              : in  std_logic                      := '0'              --                 .ready
	);
end entity KBandIPsubPro_KBandInput_2;

architecture rtl of KBandIPsubPro_KBandInput_2 is
	component KBandIPsubPro_KBandInput_2_altera_msgdma_191_oqmyswq_cmp is
		port (
			clock_clk                    : in  std_logic                      := 'X';             -- clk
			reset_n_reset_n              : in  std_logic                      := 'X';             -- reset_n
			csr_writedata                : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- writedata
			csr_write                    : in  std_logic                      := 'X';             -- write
			csr_byteenable               : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- byteenable
			csr_readdata                 : out std_logic_vector(31 downto 0);                     -- readdata
			csr_read                     : in  std_logic                      := 'X';             -- read
			csr_address                  : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- address
			descriptor_slave_write       : in  std_logic                      := 'X';             -- write
			descriptor_slave_waitrequest : out std_logic;                                         -- waitrequest
			descriptor_slave_writedata   : in  std_logic_vector(127 downto 0) := (others => 'X'); -- writedata
			descriptor_slave_byteenable  : in  std_logic_vector(15 downto 0)  := (others => 'X'); -- byteenable
			csr_irq_irq                  : out std_logic;                                         -- irq
			mm_read_address              : out std_logic_vector(31 downto 0);                     -- address
			mm_read_read                 : out std_logic;                                         -- read
			mm_read_readdata             : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- readdata
			mm_read_waitrequest          : in  std_logic                      := 'X';             -- waitrequest
			mm_read_readdatavalid        : in  std_logic                      := 'X';             -- readdatavalid
			st_source_data               : out std_logic_vector(7 downto 0);                      -- data
			st_source_valid              : out std_logic;                                         -- valid
			st_source_ready              : in  std_logic                      := 'X'              -- ready
		);
	end component KBandIPsubPro_KBandInput_2_altera_msgdma_191_oqmyswq_cmp;

	for kbandinput_2 : KBandIPsubPro_KBandInput_2_altera_msgdma_191_oqmyswq_cmp
		use entity altera_msgdma_191.KBandIPsubPro_KBandInput_2_altera_msgdma_191_oqmyswq;
begin

	kbandinput_2 : component KBandIPsubPro_KBandInput_2_altera_msgdma_191_oqmyswq_cmp
		port map (
			clock_clk                    => clock_clk,                    --            clock.clk
			reset_n_reset_n              => reset_n_reset_n,              --          reset_n.reset_n
			csr_writedata                => csr_writedata,                --              csr.writedata
			csr_write                    => csr_write,                    --                 .write
			csr_byteenable               => csr_byteenable,               --                 .byteenable
			csr_readdata                 => csr_readdata,                 --                 .readdata
			csr_read                     => csr_read,                     --                 .read
			csr_address                  => csr_address,                  --                 .address
			descriptor_slave_write       => descriptor_slave_write,       -- descriptor_slave.write
			descriptor_slave_waitrequest => descriptor_slave_waitrequest, --                 .waitrequest
			descriptor_slave_writedata   => descriptor_slave_writedata,   --                 .writedata
			descriptor_slave_byteenable  => descriptor_slave_byteenable,  --                 .byteenable
			csr_irq_irq                  => csr_irq_irq,                  --          csr_irq.irq
			mm_read_address              => mm_read_address,              --          mm_read.address
			mm_read_read                 => mm_read_read,                 --                 .read
			mm_read_readdata             => mm_read_readdata,             --                 .readdata
			mm_read_waitrequest          => mm_read_waitrequest,          --                 .waitrequest
			mm_read_readdatavalid        => mm_read_readdatavalid,        --                 .readdatavalid
			st_source_data               => st_source_data,               --        st_source.data
			st_source_valid              => st_source_valid,              --                 .valid
			st_source_ready              => st_source_ready               --                 .ready
		);

end architecture rtl; -- of KBandIPsubPro_KBandInput_2
