-- FifoKBandOUT.vhd

-- Generated using ACDS version 19.1 240

library IEEE;
library fifo_191;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FifoKBandOUT is
	port (
		data    : in  std_logic_vector(511 downto 0) := (others => '0'); --  fifo_input.datain
		wrreq   : in  std_logic                      := '0';             --            .wrreq
		rdreq   : in  std_logic                      := '0';             --            .rdreq
		wrclk   : in  std_logic                      := '0';             --            .wrclk
		rdclk   : in  std_logic                      := '0';             --            .rdclk
		aclr    : in  std_logic                      := '0';             --            .aclr
		q       : out std_logic_vector(127 downto 0);                    -- fifo_output.dataout
		wrusedw : out std_logic_vector(2 downto 0);                      --            .wrusedw
		rdempty : out std_logic;                                         --            .rdempty
		wrfull  : out std_logic                                          --            .wrfull
	);
end entity FifoKBandOUT;

architecture rtl of FifoKBandOUT is
	component FifoKBandOUT_fifo_191_bfpp2jq_cmp is
		port (
			data    : in  std_logic_vector(511 downto 0) := (others => 'X'); -- datain
			wrreq   : in  std_logic                      := 'X';             -- wrreq
			rdreq   : in  std_logic                      := 'X';             -- rdreq
			wrclk   : in  std_logic                      := 'X';             -- wrclk
			rdclk   : in  std_logic                      := 'X';             -- rdclk
			aclr    : in  std_logic                      := 'X';             -- aclr
			q       : out std_logic_vector(127 downto 0);                    -- dataout
			wrusedw : out std_logic_vector(2 downto 0);                      -- wrusedw
			rdempty : out std_logic;                                         -- rdempty
			wrfull  : out std_logic                                          -- wrfull
		);
	end component FifoKBandOUT_fifo_191_bfpp2jq_cmp;

	for fifo_0 : FifoKBandOUT_fifo_191_bfpp2jq_cmp
		use entity fifo_191.FifoKBandOUT_fifo_191_bfpp2jq;
begin

	fifo_0 : component FifoKBandOUT_fifo_191_bfpp2jq_cmp
		port map (
			data    => data,    --  fifo_input.datain
			wrreq   => wrreq,   --            .wrreq
			rdreq   => rdreq,   --            .rdreq
			wrclk   => wrclk,   --            .wrclk
			rdclk   => rdclk,   --            .rdclk
			aclr    => aclr,    --            .aclr
			q       => q,       -- fifo_output.dataout
			wrusedw => wrusedw, --            .wrusedw
			rdempty => rdempty, --            .rdempty
			wrfull  => wrfull   --            .wrfull
		);

end architecture rtl; -- of FifoKBandOUT
